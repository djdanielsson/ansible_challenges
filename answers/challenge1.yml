---
- hosts: all
  gather_facts: true
  tasks:
    - name: Ensure nginx is installed
      ansible.builtin.package:
        name: 
          - "nginx"
          - "python3-libselinux"
          - "policycoreutils-python-utils"
        state: latest
      notify: nginx

    - name: Ensure nginx config is good
      ansible.builtin.template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf
      notify: nginx

    - name: Ensure index.html is correct
      ansible.builtin.template:
        src: templates/index.html.j2
        dest: /var/www/html/index.html

    - name: Ensure test.html is correct
      ansible.builtin.replace:
        path: /var/www/html/test.html
        regexp: ' TeSt '
        replace: ' test '

    - name: Ensure firewall ports and services are open
      ansible.posix.firewalld:
        zone: public
        service: nginx # https
        permanent: yes
        state: enabled

    - name: Ensure firewall ports and services are open
      ansible.posix.firewalld:
        zone: public
        port: 7510/tcp
        permanent: yes
        state: enabled

    - name: Allow nginx to listen on tcp port 7510
      community.general.seport:
        ports: 7510
        proto: tcp
        setype: http_port_t
        state: present

    - name: "Ensure user {{ item.name }} exists"
      ansible.builtin.user:
        name: "{{ item.name }}"
        groups: "{{ item.group | default(omit) }}"
        append: true
        uid: "{{ item.uid | default(omit) }}"
        password: "{{ lookup('ansible.builtin.password', '/root/.(( item.name )).password chars=ascii_letters,digits,punctuation') }}"
      loop: "{{ users }}"

  handlers:
    - name: nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
        enabled: true
...
